{% extends 'base.html.twig' %}

{% block content %}
	{% set taskCounts = {} %}
	<div id="data" class="d-none" data-task-counts=""></div>
	<div class="row gy-4">
		{% for type in totalByType %}
			<div onclick="showTable('{{ type.intitule|lower }}')" class="col-lg-3 text-center  col-md-4 col-6 mini-card" style="cursor: pointer;">
				<div class="card h-100">
					<div class="card-body">
						<i class="bx {{ type.codeIcon }} {{ type.codeColor }} mb-1 fs-2"></i>
						<h3 class="card-title {{ type.codeColor }} mb-2">{{type.intitule}}</h3>
						<h4 class="fw-semibold d-block {{ type.codeColor }} mb-1" style="padding-top: 10px;">{{type.somme}}</h4>
					</div>
				</div>
			</div>
		{% endfor %}
		{% for type in types %}
		<div id="{{ type.intitule|lower }}" class="tables" style="display: none;">
			<h2 class="typeTitle">{{ type.intitule }}</h2>
			<table id="{{ type.intitule|upper }}" class="table">
				<thead>
					<tr>
						<th scope="col">Spécialité</th>
						{% for categorie in categories %}
							<th scope="col">{{categorie.intitule}}</th>
						{% endfor %}
						<th scope="col">Total</th>
					</tr>
				</thead>
				<tbody>
					{% for specialite in type.specialites %}
					{% if totalBySpecialite[specialite.id] is defined %}
						<tr>
							<td>{{specialite.intitule}}</td>
							{% for categorie in categories %}
								{% if posts[specialite.id][categorie.id] is defined %}
									<td>{{posts[specialite.id][categorie.id]}}</td>
								{% endif %}
								{% if posts[specialite.id][categorie.id] is not defined %}
									<td>0</td>
								{% endif %}
							{% endfor %}
							{% if totalBySpecialite[specialite.id] is defined %}
								<td>{{totalBySpecialite[specialite.id]}}</td>
							{% endif %}
						{% endif %}
						</tr>
					{% endfor %}
				</tbody>
			</table>
		</div>
		{% endfor %}
		<script src="{{ asset('assets/js/chart.js') }}"></script>
		<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
		<script>

			axios.get('http://127.0.0.1:8000/posts/get').then(function (response) { // en cas de réussite de la requête
				console.log(response.data);
				}).catch(function (error) { // en cas d’échec de la requête
				console.log(error);
				}). finally(function () { // dans tous les cas
			});

			// Fonction pour extraire les données d'une table HTML et les stocker dans un tableau d'objets
			function extractTableData(table) {
				var data = [];
				var headers = [];
				// Récupérer les en-têtes de colonne
				table.querySelectorAll('th').forEach(function (header) {
					headers.push(header.textContent.trim());
				});
				// Récupérer les lignes de données
				table.querySelectorAll('tbody tr').forEach(function (row) {
					var rowData = {};
					row.querySelectorAll('td').forEach(function (cell, index) {
						rowData[headers[index]] = cell.textContent.trim();
					});
					data.push(rowData);
				});
				return data;
			}

			// Fonction pour injecter les données d'un tableau d'objets dans une table HTML
			function injectDataIntoTable(data, table) {
				var tbody = table.querySelector('tbody');
				tbody.innerHTML = ''; // Effacer le contenu actuel de la table
				data.forEach(function (item) {
					var row = document.createElement('tr');

					Object.values(item).forEach(function (value) {
						var cell = document.createElement('td');
						if (value == 0) 
							cell.setAttribute("style", "color:  #e74c3c; font-weight: 700");
						cell.textContent = value;
						row.appendChild(cell);
					});
					tbody.appendChild(row);
				});
			}

			// Extraire les données des tables HTML
			{% for type in types %}
			var {{ type.intitule|upper }} = extractTableData(document.getElementById("{{ type.intitule|upper }}"));
			console.log({{ type.intitule|upper }});
			// Injecter les données extraites dans d'autres tables HTML
			injectDataIntoTable({{ type.intitule|upper }}, document.getElementById("{{ type.intitule|upper }}"));{% endfor %}

			function showTable(idTableau) { // Cacher tous les tableaux
				var tables = document.getElementsByClassName('tables');
				for (var i = 0; i < tables.length; i++) {
					tables[i].style.display = 'none';
				}

				// Afficher le tableau correspondant à l'ID passé en paramètre
				var tableau = document.getElementById(idTableau);
				if (tableau) {
					tableau.style.display = 'block';
				}
			}

			// fonction de mise a jour automatique avec la base de donées

			function updateArrayData() {}
					</script>
				{% endblock %}
